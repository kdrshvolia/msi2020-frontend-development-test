import React from 'react';import { mount } from 'enzyme';import { withBoard } from './withBoard';import apiCall from '../../apiCall';jest.mock('../../apiCall');apiCall.mockImplementation(() => Promise.resolve(['1', '2']));const WrappedComponent = (props) => {  return <div />;};const EnhancedComponent = withBoard(WrappedComponent);describe('Enhanced Component', () => {  it('Passes upadted inputText prop', () => {    const wrapper = mount(<EnhancedComponent />);    wrapper.find(WrappedComponent).props().setInputText('abc');    wrapper.update();    const { inputText } = wrapper.find(WrappedComponent).props();    expect(inputText).toEqual('abc');  });  it('Component mounts and gets categories ', async () => {    const wrapper = mount(<EnhancedComponent />);    await Promise.resolve();    wrapper.update();    const { categories } = wrapper.find(WrappedComponent).props();    expect(categories).toEqual(['1', '2']);  });  it('Sets chosen category', () => {    const wrapper = mount(<EnhancedComponent />);    wrapper.find(WrappedComponent).props().setCategory('a');    wrapper.update();    const { chosenCategory } = wrapper.find(WrappedComponent).props();    expect(chosenCategory).toEqual('a');  });});